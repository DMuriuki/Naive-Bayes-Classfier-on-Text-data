---
title: "R Notebook"
output: html_notebook
---
```{r}
install.packages("bigmemory")
library(bigmemory)
Data<-read.csv(file.choose(), header=T)
str(Data)

```

```{r}
#Data preparation
Data$comment_text<-as.character(Data$comment_text) # Convert comments into character data type
Data[which(Data$target>0.5),2]<-"Toxic"
Data[which(Data$target<=0.5),2]<-"Non-Toxic"
table(Data$target)
```

```{r}
library(tidyverse)
ggplot(data=Data, mapping=aes(x= Data$target))+
         geom_histogram(binwidth=0.5)
         
```

```{r}
install.packages("tm")
library(tm)
data_corpus <- Corpus(VectorSource(Data$comment_text))# Building a corpus
inspect(data_corpus[1:3])# inspect the first 3 comments
```

```{r}
corpus_clean <- tm_map(data_corpus, tolower)# converts all comments to lower case
corpus_clean <- tm_map(corpus_clean, removeNumbers) # removes all numbers in the comment
corpus_clean <- tm_map(corpus_clean, removeWords, stopwords())# remove stop words
```

```{r}
corpus_clean <- tm_map(corpus_clean, removePunctuation)# removes punctuation
corpus_clean <- tm_map(corpus_clean, stripWhitespace)# removes white spaces
inspect(corpus_clean[1:3])#Inspect the first 3 messages after the clean up
```


```{r}
#Creating a sparse matrix
sms_dtm <- DocumentTermMatrix(corpus_clean)
# Splitting dataset into train and test datasets
data_train <- Data[1:1353656, ]
data_test<-Data[1353657: 1804874,]
# Splitting the document term matrix
dtm_train <- sms_dtm[1:1353656, ] 
dtm_test  <- sms_dtm[1353657: 1804874, ]
#Splitting the corpus
corpus_train <- corpus_clean[1:1353656]  
corpus_test  <- corpus_clean[1353657: 1804874] 
```

```{r}
prop.table(table(data_train$target)) 
prop.table(table(data_test$target)) 
```

```{r}
#Visualizing text data
install.packages("wordcloud")
library(wordcloud)
 wordcloud(corpus_train, min.freq = 130, random.order = FALSE)
```

```{r}
rejected <- subset(data_train, target== "Toxic")
approved <- subset(data_train, target== "Non-Toxic") 
wordcloud(rejected$comment_text, max.words = 130, scale = c(3, 0.5))
wordcloud(approved$comment_text, max.words = 130, scale = c(3, 0.5))
```

```{r}
#character vector of the words appearing at least 5 times in the dtm_train matrix
dict<-findFreqTerms(dtm_train,5)
dict
```
```{r}
install.packages("slam")
library(slam)
#save this list of frequent terms for use later
train<-DocumentTermMatrix(corpus_train,list(dictionary=dict))
test<-DocumentTermMatrix(corpus_test,list(dictionary=dict))

```

```{r}
convert_counts <- function(x) {    
x <- ifelse(x > 0, 1, 0) 
x <- factor(x, levels = c(0, 1), labels = c("No", "Yes"))  
return(x) 
}
```

```{r}
train <- apply(train_dtm, MARGIN = 2, convert_counts) 
test  <- apply(test, MARGIN = 2, convert_counts)
```

```{r}
install.packages("e1071")
library(e1071)
classifier <- naiveBayes(train, train$target)
```

```{r}
library(gmodels)
CrossTable(sms_test_pred, sms_raw_test$type,    prop.chisq = FALSE, prop.t = FALSE,    dnn = c('predicted', 'actual'))
```
